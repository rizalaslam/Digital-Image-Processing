{"version":3,"sources":["components/About.js","components/Chart.js","components/Histogram.js","components/Image.js","components/Home.js","components/Footer.js","App.js","serviceWorker.js","index.js","image/example.png"],"names":["About","Jumbotron","fluid","className","Container","Media","left","href","object","src","image","style","width","body","heading","ListGroup","ListGroupItem","Component","Chart","props","state","isInit","setTimeout","svg","console","log","setState","nextProps","nextState","this","_updateScale","_generateArea","domain","elem","document","querySelector","baseVal","value","height","scale","x","d3","range","y","area","d","y1","y0","dataset","map","i","id","channel","data","key","ref","renderArea","Histogram","primaryChannels","maxValue","imageSrc","isLoading","prevProps","prevState","handleImageChanged","handleChannelChanged","Object","keys","filter","ch","idx","propSrc","propChannel","getElementById","getRGBDataEnhance","getRGBData","Array","fill","img","canvas","createElement","getContext","drawImage","pixel","getImageData","Math","round","slice","reduce","a","b","hasOwnProperty","max","icon","faChartBar","color","size","Spinner","animation","variant","getDomain","getDataset","CardBody","renderContent","Image","ImageDatas","enhanceSrc","contrast","brightness","toast","success","handleFilterBrightnessContrastChanged","getPixel","loadImage","propFilter","propBrightness","propContrast","setBrightness","setContrast","lol","joss","putImageData","toDataURL","matrice","kernel","binder","kernelX","kernelY","processed","bindAt","pixelAt","pixelX","pixelY","magnitude","sqrt","push","set","Uint8ClampedArray","process","r","g","factor","getImage","getRobert","getSobel","Row","Col","Card","CardHeader","tag","backgroundColor","renderImage","Home","isLoaded","url","background","updateDimensions","bind","photo","setAttribute","evt","file","files","reader","FileReader","addEventListener","result","name","readAsDataURL","window","innerWidth","innerHeight","removeEventListener","Button","outline","active","onClick","click","Form","FormGroup","row","Label","sm","Input","type","onChange","e","target","ttype","switchFilter","switchReset","fontWeight","renderPhoto","renderPlaceholder","renderEnhance","accept","display","handleImageSelected","renderButtonEnhance","renderButton","position","POSITION","BOTTOM_RIGHT","App","Navbar","dark","expand","NavbarBrand","RRNavLink","exact","to","Nav","navbar","NavItem","NavLink","activeClassName","path","component","Footer","Boolean","location","hostname","match","library","add","fab","faCoffee","faImage","faHeart","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.78da2a7e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { ListGroupItem, ListGroup, Container, Jumbotron, Media,  Card,CardTitle, CardBody, Input, Button } from 'reactstrap';\nimport image from '../image/example.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\n\nclass About extends Component {\n      \n    render() {\n        return (\n            <div>\n            <Jumbotron fluid className=\"text-center\">\n            <Container fluid>\n              <h1 className=\"display-3\">Digital Image Processing App</h1>\n            </Container>\n          </Jumbotron>\n          <Container>\n          <Media>\n          <Media left href=\"#\">\n            <Media className=\"shadow\" object src={image} style={{ width: '500px' }} />\n          </Media>\n          <Media className=\"ml-3\"body>\n            <Media heading>\n              Reference :\n            </Media>\n            <ListGroup>\n      <ListGroupItem>https://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-5-contrast-adjustment/</ListGroupItem>\n      <ListGroupItem>https://css-tricks.com/manipulating-pixels-using-canvas/</ListGroupItem>\n      <ListGroupItem>https://www.html5rocks.com/en/tutorials/canvas/imagefilters/</ListGroupItem>\n      <ListGroupItem>https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter</ListGroupItem>\n    </ListGroup>\n          </Media>\n        </Media>\n        \n        </Container>\n        </div>\n);\n}\n}\nexport default About;","import React, {Component} from 'react';\nimport * as d3 from 'd3';\n\nimport './Chart.css';\n/**\n * Class of D3Chart\n */\nclass Chart extends Component {\n  /**\n   * Constructor\n   * @arg {object} props attributes\n   */\n  constructor(props) {\n    super(props);\n    this.state = {isInit: false};\n  }\n\n\n  /**\n   * React function\n   */\n  componentDidMount() {\n    setTimeout(() => {\n      if (!this.svg) {\n        console.log('SVG element is not ready.');\n        return;\n      }\n      console.log('SVG element is ready.');\n      this.setState({isInit: true});\n    }, 0);\n  }\n\n  /**\n   * React function\n   * @arg {Object} nextProps\n   * @arg {Object} nextState\n   */\n  componentWillUpdate(nextProps, nextState) {\n    this._updateScale();\n    this._generateArea();\n  }\n\n  /**\n   * Calculat scale object\n   */\n  _updateScale() {\n    const props = this.props;\n    const {domain} = props;\n\n    const elem = document.querySelector('.d3');\n    let width = elem.width.baseVal.value;\n    let height = elem.height.baseVal.value;\n\n    this.scale = {\n      x: d3.scaleLinear().range([0, width]).domain(domain.x),\n      y: d3.scaleLinear().range([height, 0]).domain(domain.y),\n    };\n  }\n\n  /**\n   * Generate d3-area function\n   */\n  _generateArea() {\n    this.area = d3.area()\n                  .x((d) => this.scale.x(d.x))\n                  .y1((d) => this.scale.y(d.y))\n                  .y0(this.scale.y(0));\n  }\n\n  /**\n   * Render area\n   * @return {JSX}\n   */\n  renderArea() {\n    const props = this.props;\n    if (!this.state.isInit || !props.dataset) {\n      return;\n    }\n    \n    return (\n      <g>\n        {\n          props.dataset.map((d, i) => {\n            return (\n              <path id={d.channel + '-channel'}\n                    d={this.area(d.data)}\n                    key={i} />\n            );\n          })\n        }\n      </g>\n    );\n  }\n\n  /**\n   * React render function\n   * @return {JSX}\n   */\n  render() {\n    return (\n      <svg className=\"d3\"\n        ref={(elem) => this.svg = elem}\n        style={{height: '100%', width: '100%'}}>\n        {this.renderArea()}\n        \n      </svg>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport Chart from './Chart';\nimport { Button, Spinner, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\nimport './Histogram.css';\n\n\nclass Histogram extends Component {\n\n  constructor(props) {\n    super(props);\n    this.primaryChannels = {};\n    this.maxValue = 0;\n    this.state = {\n      imageSrc: null,\n      isLoading: false,\n      channel: null,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n\n    const isImageChanged = this.state.imageSrc !== props.src;\n    if (isImageChanged) {\n      this.handleImageChanged(props.src, props.channel);\n      return;\n    }\n\n    const isChannelChanged = this.state.channel !== props.channel;\n    if (isChannelChanged) {\n      this.handleChannelChanged(props.channel);\n      return;\n    }\n  }\n\n  getDataset() {\n    let converToCoord = (data) => {\n\n      return data.map((value, idx) => ({x: idx, y: value}));\n    };\n    let channelList = [];\n    if (this.state.channel !== 'all') {\n      channelList = [this.state.channel];\n    } else {\n      channelList = Object.keys(this.primaryChannels)\n                          .filter((ch) => ch !== 'grayscale');\n    }\n    return channelList.map((ch) => {\n      return {\n        channel: ch,\n        data: converToCoord(this.primaryChannels[ch]),\n      };\n    });\n  }\n\n  getDomain() {\n      return {x: [0, 255], y: [0, this.maxValue]};\n  }\n\n  handleImageChanged(propSrc, propChannel) {\n    this.setState({imageSrc: propSrc,\n                   isLoading: true,\n                   channel: propChannel});\n    let img = document.getElementById('photo');\n    const Enhance = img.src !== propSrc;\n    if (Enhance) {\n      setTimeout(() => {\n        this.getRGBDataEnhance();\n        this.setState({isLoading: false});\n      }, 0);\n    }\n    else {\n      setTimeout(() => {\n        this.getRGBData();\n        this.setState({isLoading: false});\n      }, 0);\n    }\n    \n  }\n  \n\n  handleChannelChanged(propChannel) {\n    this.setState({channel: propChannel});\n  }\n\n  getRGBData() {\n    this.primaryChannels = {\n      'grayscale': new Array(256).fill(0),\n      'red': new Array(256).fill(0),\n      'green': new Array(256).fill(0),\n      'blue': new Array(256).fill(0),\n    };\n\n    this.maxValue = 0;\n\n    // read image\n    let img = document.getElementById('photo');\n    let canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    canvas.getContext('2d').drawImage(img, 0, 0, img.width, img.height);\n\n    // read each pixel data\n    for (let x = 0; x < canvas.width; ++x) {\n      for (let y = 0; y < canvas.height; ++y) {\n        const pixel = canvas.getContext('2d').getImageData(x, y, 1, 1).data;\n        ++this.primaryChannels['red'][pixel[0]];\n        ++this.primaryChannels['green'][pixel[1]];\n        ++this.primaryChannels['blue'][pixel[2]];\n        ++this.primaryChannels['grayscale'][Math.round(pixel.slice(0, 3).reduce((a, b) => a + b, 0) / 3)];\n      }\n    }\n\n    for (let ch in this.primaryChannels) {\n      if (this.primaryChannels.hasOwnProperty(ch)) {\n        this.maxValue = Math.max(this.maxValue, Math.max(...this.primaryChannels[ch]));\n      }\n    }\n\n    this.maxValue = Math.round(this.maxValue * 1.05);\n\n  }\n  getRGBDataEnhance() {\n    this.primaryChannels = {\n      'grayscale': new Array(256).fill(0),\n      'red': new Array(256).fill(0),\n      'green': new Array(256).fill(0),\n      'blue': new Array(256).fill(0),\n    };\n\n    this.maxValue = 0;\n\n    // read image\n    let img = document.getElementById('enhance');\n    let canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    canvas.getContext('2d').drawImage(img, 0, 0, img.width, img.height);\n\n    // read each pixel data\n    for (let x = 0; x < canvas.width; ++x) {\n      for (let y = 0; y < canvas.height; ++y) {\n        const pixel = canvas.getContext('2d').getImageData(x, y, 1, 1).data;\n        ++this.primaryChannels['red'][pixel[0]];\n        ++this.primaryChannels['green'][pixel[1]];\n        ++this.primaryChannels['blue'][pixel[2]];\n        ++this.primaryChannels['grayscale'][Math.round(pixel.slice(0, 3).reduce((a, b) => a + b, 0) / 3)];\n      }\n    }\n\n    for (let ch in this.primaryChannels) {\n      if (this.primaryChannels.hasOwnProperty(ch)) {\n        this.maxValue = Math.max(this.maxValue, Math.max(...this.primaryChannels[ch]));\n      }\n    }\n\n    this.maxValue = Math.round(this.maxValue * 1.05);\n\n  }\n  \n\n  renderContent() {\n    const props = this.props;\n    if (props.src === null) {\n      return (\n        <FontAwesomeIcon id=\"histogram-chart\" icon={faChartBar} style={{ color: 'blue' }} size=\"6x\" />\n      );\n    }\n    if (this.state.isLoading) {\n      return (\n        <Spinner color=\"warning\" id=\"histogram-chart\" animation=\"border\" variant=\"primary\"/>\n      );\n    }\n    return (\n      <Chart domain={this.getDomain()} dataset={this.getDataset()}>\n      </Chart>\n    );\n  }\n\n  render() {\n    return (\n        <CardBody style={{ height: '250px' }}>\n        {this.renderContent()}\n        </CardBody>\n    );\n  }\n}\n\nexport default Histogram;\n","import React, {Component} from 'react';\nimport { CardHeader, Row, Col, Card, Spinner, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Histogram from './Histogram';\nimport { toast } from 'react-toastify';\nimport './Histogram.css';\n\n\nclass Image extends Component {\n\n    constructor(props) {\n        super(props);\n        this.primaryChannels = {};\n        this.maxValue = 0;\n        this.ImageDatas = {};\n        this.state = {\n          imageSrc: null,\n          enhanceSrc: null,\n          channel: 'all',\n          filter: null,\n          contrast: 0,\n          brightness: 0,\n          isLoading: false,\n        };\n      }\n\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n    const isImageChanged = this.state.imageSrc !== props.src;\n      if (isImageChanged) {\n      toast.success(\"Processing Image\");\n      this.handleImageChanged(props.src);\n      return;\n      }\n\n    const isFilterBrightnessChanged = this.state.filter !== props.filter || this.state.brightness !== props.brightness || this.state.contrast !== props.contrast;\n    if (isFilterBrightnessChanged) {\n    this.handleFilterBrightnessContrastChanged(props.filter, props.brightness, props.contrast);\n    return;\n    }\n  }\n\n  handleImageChanged(propSrc) {\n    this.setState({imageSrc: propSrc,\n                  filter: null,\n                  isLoading: true});\n    setTimeout(() => {\n        this.getPixel();\n        this.loadImage();\n        this.setState({isLoading: false});\n        toast.success(\"Image Processed\");\n    }, 1000);\n  }\n\n  handleFilterBrightnessContrastChanged(propFilter, propBrightness, propContrast) {\n    this.setState({filter: propFilter,\n                  brightness: propBrightness,\n                  contrast: propContrast,\n                  isLoading: true});\n    setTimeout(() => {\n      this.getPixel();\n      this.setBrightness();\n      this.setContrast();\n      this.loadImage();\n      this.setState({isLoading: false});\n    }, 4000);\n  }\n\n\n  getImage() {\n    let lol = this.ImageDatas;\n    let joss = document.createElement('canvas');\n      joss.width = this.width;\n      joss.height = this.height;\n    let lel = joss.getContext('2d');\n      lel.putImageData(lol,0,0);\n    this.setState({\n      enhanceSrc: joss.toDataURL()\n    });\n  }\n  \n  getRobert() {\n    let {data} = this.ImageDatas;\n    const matrice = (kernel, x ,y, binder) => (\n        (kernel[0][0] * binder(x, y)) +\n        (kernel[0][1] * binder(x + 1, y)) +\n        (kernel[1][0] * binder(x, y + 1)) +\n        (kernel[1][1] * binder(x + 1, y + 1))\n    );\n    const kernelX = [\n        [1, 0],\n        [0, -1]\n    ];\n    const kernelY = [\n        [0, 1],\n        [-1, 0]\n    ];\n\n    let processed = [];\n    const bindAt = (data) => (x, y, i = 0) => data[((this.width * y) + x) * 4 + i];\n    let pixelAt = bindAt(data);\n\n    pixelAt = bindAt(data);\n    for (let y = 0; y < this.height; y++) {\n        for (let x = 0; x < this.width; x++) {\n            const pixelX = matrice(kernelX, x, y, pixelAt);\n            const pixelY = matrice(kernelY, x, y, pixelAt);\n            const magnitude = Math.sqrt((pixelX * pixelX) + (pixelY * pixelY)) >>> 0;\n            processed.push(magnitude, magnitude, magnitude, 255);\n      }\n    }\n    this.ImageDatas.data.set(new Uint8ClampedArray(processed));\n    let canvas = document.createElement('canvas');\n    canvas.width = this.width;\n    canvas.height = this.height;\n    let img = canvas.getContext('2d');\n      img.putImageData(this.ImageDatas,0,0);\n    this.setState({\n      enhanceSrc: canvas.toDataURL()\n    });\n  }\n\n  getSobel() {\n    let {data} = this.ImageDatas;\n    const matrice = (kernel, x ,y, binder) => (\n      (kernel[0][0] * binder(x - 1, y - 1)) +\n      (kernel[0][1] * binder(x, y - 1)) +\n      (kernel[0][2] * binder(x + 1, y - 1)) +\n      (kernel[1][0] * binder(x - 1, y)) +\n      (kernel[1][1] * binder(x, y)) +\n      (kernel[1][2] * binder(x + 1, y)) +\n      (kernel[2][0] * binder(x - 1, y + 1)) +\n      (kernel[2][1] * binder(x, y + 1)) +\n      (kernel[2][2] * binder(x + 1, y + 1))\n  );\n\n    const kernelX = [\n            [-1, 0, 1],\n            [-2, 0, 2],\n            [-1, 0, 1]\n        ];\n\n        const kernelY = [\n            [-1, -2, -1],\n            [0, 0, 0],\n            [1, 2, 1]\n        ];\n\n        let processed = [];\n\n        const bindAt = (data) => (x, y, i = 0) => data[((this.width * y) + x) * 4 + i];\n        let pixelAt = bindAt(data);\n\n        pixelAt = bindAt(data);\n\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const pixelX = matrice(kernelX, x, y, pixelAt);\n                const pixelY = matrice(kernelY, x, y, pixelAt);\n                const magnitude = Math.sqrt((pixelX * pixelX) + (pixelY * pixelY)) >>> 0;\n\n                processed.push(magnitude, magnitude, magnitude, 255);\n            }\n        }\n\n    this.ImageDatas.data.set(new Uint8ClampedArray(processed));\n    let canvas = document.createElement('canvas');\n    canvas.width = this.width;\n    canvas.height = this.height;\n    let img = canvas.getContext('2d');\n      img.putImageData(this.ImageDatas,0,0);\n    this.setState({\n      enhanceSrc: canvas.toDataURL()\n    });\n  }\n    \n  getPixel() {\n    let img = document.getElementById('photo');\n    this.width = img.width;\n    this.height = img.height;\n    let canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      canvas.getContext('2d').drawImage(img, 0, 0, img.width, img.height);\n    this.ImageDatas = canvas.getContext('2d').getImageData(0, 0, img.width, img.height);\n    let {data} = this.ImageDatas;\n    let process = [];\n    const bindAt = (data) => (x, y, i = 0) => data[((this.width * y) + x) * 4 + i];\n    let pixelAt = bindAt(data);\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const r = pixelAt(x, y, 0) + 255 * (this.state.brightness/100);\n                const g = pixelAt(x, y, 1) + 255 * (this.state.brightness/100);\n                const b = pixelAt(x, y, 2) + 255 * (this.state.brightness/100);\n                process.push(r, g, b, 255);\n            }\n        }\n  this.ImageDatas.data.set(new Uint8ClampedArray(process));\n  }\n\nsetBrightness() {\n  let {data} = this.ImageDatas;\n    let process = [];\n    const bindAt = (data) => (x, y, i = 0) => data[((this.width * y) + x) * 4 + i];\n    let pixelAt = bindAt(data);\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const r = pixelAt(x, y, 0) + 255 * (this.state.brightness/100);\n                const g = pixelAt(x, y, 1) + 255 * (this.state.brightness/100);\n                const b = pixelAt(x, y, 2) + 255 * (this.state.brightness/100);\n                process.push(r, g, b, 255);\n            }\n        }\n  this.ImageDatas.data.set(new Uint8ClampedArray(process));\n}\n\nsetContrast() {\n  let {data} = this.ImageDatas;\n    let process = [];\n    const factor = (259 * (this.state.contrast + 255)) / (255 * (259 - this.state.contrast));\n    const bindAt = (data) => (x, y, i = 0) => data[((this.width * y) + x) * 4 + i];\n    let pixelAt = bindAt(data);\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const r = factor * (pixelAt(x, y, 0)  - 128) + 128;\n                const g = factor * (pixelAt(x, y, 1)  - 128) + 128;\n                const b = factor * (pixelAt(x, y, 2)  - 128) + 128;\n                process.push(r, g, b, 255);\n            }\n        }\n  this.ImageDatas.data.set(new Uint8ClampedArray(process));\n}\n\n\n  loadImage() {\n  if (this.state.filter == null) {\n    this.getImage();\n    } \n  else if (this.state.filter === \"robert\") {\n      this.getRobert();\n  } else {\n      this.getSobel();\n    }\n  }\n  \n  renderImage() {\n    const props = this.props;\n    if (props.src === null) {\n      return (\n        <div id=\"photo-placeholder\">\n        <FontAwesomeIcon icon=\"image\" style={{ color: 'blue' }} size=\"6x\" />\n       </div>\n      );\n    }\n    if (this.state.isLoading) {\n      return (\n        <Spinner color=\"secondary\" id=\"photo\" animation=\"border\" variant=\"primary\"/>\n      );\n    }\n    return (\n        <img id=\"enhance\" src={this.state.enhanceSrc}  />\n    );\n  }\n\n  render() {\n    return (\n      <Row className=\"mt-4\">\n      <Col>\n        <Card className=\"shadow-sm\" style={{  height: '400px' }}>\n        <CardHeader className=\"text-center\" tag=\"h4\" style={{ backgroundColor: 'white'}}>Enhanced Image</CardHeader>\n          <CardBody id=\"photo-block\" >\n          {this.renderImage()}\n          </CardBody>\n        </Card>\n      </Col>\n      <Col>\n        <Card className=\"shadow-sm\" style={{ height: '400px' }}>\n        <CardHeader className=\"text-center\" tag=\"h4\" style={{ backgroundColor: 'white'}}>Histogram</CardHeader>\n          <Histogram src={this.state.enhanceSrc} channel={this.state.channel} />\n        </Card>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nexport default Image;\n","import React, {Component} from 'react';\nimport { Form, FormGroup, Label, CardHeader, Container, Row, Col,  Card,CardTitle, CardBody, Input, Button } from 'reactstrap';\nimport Histogram from './Histogram';\nimport 'react-rangeslider/lib/index.css'\nimport Image from './Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Home.css';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isLoaded: false,\n                      channel: 'all',\n                      filter: null,\n                      isLoading: false,\n                      imageSrc: null,\n                      url: null,\n                      background: '',\n                      brightness: 0,\n                      contrast: 0,\n                      width: 0,\n                      height: 0};\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.photo = document.createElement('img');\n        this.photo.setAttribute('id', 'photo');\n      }\n\n      handleImageSelected(evt) {\n        let file = document.querySelector('#fileInput').files[0];\n        this.loadImage(file);\n      }\n      \n      loadImage(file) {\n        this.setState({isLoaded: true});\n        let reader = new FileReader();\n        reader.addEventListener('load', () => {\n            this.setState({imageSrc: reader.result,\n                          url: reader.result,\n                          filter: null,\n                          brightness: 0,\n                        contrast: 0});\n        }, false);\n        \n        if (file) {\n          toast.success(\"Load \"+file.name);\n          reader.readAsDataURL(file);\n        }\n      }\n    \n      switchChannel(channel) {\n        this.setState({channel: channel});\n      }\n\n      switchFilter(filter) {\n        toast.success(\"Change filter to \" +filter);\n        this.setState({filter: filter});\n      }\n      switchReset(filter) {\n        toast.success(\"Reset Image\");\n        this.setState({filter: filter,\n                      brightness: 0,\n                    contrast: 0});\n      }\n      updateDimensions() {\n        this.setState({width: window.innerWidth, height: window.innerHeight});\n      }\n    \n      componentDidMount() {\n        window.addEventListener('resize', this.updateDimensions);\n      }\n    \n      componentWillMount() {\n        this.updateDimensions();\n      }\n    \n      componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n      }\n    \n      renderPlaceholder() {\n        return (\n          <div id=\"photo-placeholder\">\n           <FontAwesomeIcon icon=\"image\" style={{ color: 'blue' }} size=\"6x\"/>\n          </div>\n        );\n      }\n    \n      renderPhoto() {\n        return (\n          <img id=\"photo\" src={this.state.url}  />\n        );\n      }\n      renderButton() {\n        return (\n        <>\n        <Button outline color=\"primary\" size=\"lg\" active onClick={() => document.getElementById('fileInput').click()} >Upload Image</Button>\n        </>\n        );\n      }\n      renderButtonEnhance() {\n        return (\n          <Container className=\"mt-4 pb-4\">\n      <Row>\n        <Col>\n        <Form>\n      <FormGroup row>\n        <Label sm={2}>Brightness</Label>\n        <Col sm={7}>\n          <Input type=\"number\" \n               value={this.state.brightness}\n               onChange={e => this.setState({ brightness: e.target.value })} />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label sm={2}>Contrast</Label>\n        <Col sm={7}>\n          <Input ttype=\"number\" \n               value={this.state.contrast}\n               onChange={e => this.setState({ contrast: e.target.value })} />\n        </Col>\n      </FormGroup>\n    </Form>\n        </Col>\n\n        <Col>\n        <Row>\n        <Button outline color=\"primary\" size=\"lg\" active onClick={() => this.switchFilter(\"robert\")} >Robert</Button>\n        <Button className=\"ml-2\" outline color=\"primary\" size=\"lg\" active onClick={() => this.switchFilter(\"sobel\")} >Sobel</Button>\n        <Button className=\"ml-2\" outline color=\"primary\" size=\"lg\" active onClick={() => this.switchReset(null)} >Reset</Button>\n        </Row>\n        <Row>\n        <Button className=\"mt-2\" outline color=\"primary\" size=\"lg\" active onClick={() => document.getElementById('fileInput').click()} >Change Image</Button>\n        </Row>\n        </Col>\n        </Row>\n    </Container>\n        \n        );\n      }\n      \n      renderEnhance() {\n        return (\n            <Image src={this.state.imageSrc} brightness={this.state.brightness} contrast={this.state.contrast} filter={this.state.filter}/>\n        );\n      }\n\n      render() {\n\n        return (\n    <Container className=\"mt-4 pb-4\">\n      <Row className=\"text-center pt-2\">\n        <Col>\n        <h1 style={{ fontWeight: 'bold' }}>Image Enhance</h1>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>\n          <Card className=\"shadow-sm\" style={{  height: '400px' }}>\n          <CardHeader className=\"text-center\" tag=\"h4\" style={{ backgroundColor: 'white'}}>Original Image</CardHeader>\n            <CardBody id=\"photo-block\" >\n                {this.state.isLoaded ? this.renderPhoto() : this.renderPlaceholder()}\n            </CardBody>\n          </Card>\n        </Col>\n        <Col>\n          <Card className=\"shadow-sm\" style={{ height: '400px' }}>\n          <CardHeader className=\"text-center\" tag=\"h4\" style={{ backgroundColor: 'white'}}>Histogram</CardHeader>\n            <Histogram src={this.state.imageSrc} channel={this.state.channel} />\n          </Card>\n        </Col>\n      </Row>\n      {this.state.isLoaded ? this.renderEnhance() : null}\n      <Row className=\"text-center mt-4\"> \n        <Col>\n          <Input id=\"fileInput\" type=\"file\" accept=\"image/jpeg\" style={{display: 'none'}}\n          onChange={this.handleImageSelected.bind(this)}>\n          </Input>\n          {this.state.isLoaded ? this.renderButtonEnhance() : this.renderButton()}\n        </Col>\n      </Row>\n      <ToastContainer color=\"red\" position={toast.POSITION.BOTTOM_RIGHT} />\n    </Container>\n);\n}\n}\nexport default Home;","import React, {Component} from 'react';\nimport { Container, Row, Col,  Card,CardTitle, CardBody, Input, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass About extends Component {\n      \n    render() {\n        return (\n    <Container className=\"mt-5 text-center\">\n      <p>Made with <FontAwesomeIcon icon=\"heart\" style={{ color: 'blue' }} /> + <FontAwesomeIcon icon=\"coffee\" style={{ color: 'brown' }} /> + <FontAwesomeIcon icon={['fab', 'react']} style={{ color: 'blue' }}/></p>\n    </Container>\n);\n}\n}\nexport default About;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink as RRNavLink\n} from 'react-router-dom';\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink} from 'reactstrap';\n\nimport About from './components/About';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar className=\"shadow\" dark style={{  background: 'rgba(6, 117, 255, 0.54)' }}  expand=\"md\">\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">Digital Image Processing</NavbarBrand>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink tag={RRNavLink} exact to=\"/about\" activeClassName=\"active\">About</NavLink>\n                </NavItem>\n              </Nav>\n          </Navbar>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/home\" component={Home}/>\n          <Route path=\"/about\" component={About}/>\n          <Footer/>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCoffee, faImage, faHeart } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faCoffee, faImage, faHeart)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/example.bcdeff85.png\";"],"sourceRoot":""}